###############################################################################
# Licensed Materials - Property of IBM
# (C) Copyright IBM Corporation 2019 All Rights Reserved
# US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
###############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.name }}"
  labels:
    app: "{{ .Values.name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: {{ .Values.name }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      component: {{ .Values.name }}
      release: {{ .Release.Name }}

  template:
    metadata:
      labels:
        app: "{{ .Values.name }}"
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        heritage: {{ .Release.Service }}
        k8s-app: "{{ .Values.proxy.name }}"
        component: {{ .Values.name }}
        release: {{ .Release.Name }}
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: docker/default
    spec:
      hostNetwork: false
      hostPID: false
      hostIPC: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: beta.kubernetes.io/arch
                  operator: In
                  values:
                  {{- if .Values.arch }}
                  - {{ .Values.arch }}
                  {{- else }}
                  - {{ template "kui-proxy.arch" . }}
                  {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 60
      containers:
      {{- if and .Values.useOpenshiftSettings .Values.OpenshiftSettings.oauth.useProxy}}
      - name: oauth-proxy
        args:
        - --https-address=:{{ .Values.OpenshiftSettings.oauth.proxyPort }}
        - --client-id={{ .Values.OpenshiftSettings.oauth.clientName }}
        - --client-secret={{ .Values.OpenshiftSettings.oauth.clientSecret }}
        - --pass-access-token=true
        - --provider=openshift
        - --tls-cert=/etc/tls/private/tls.crt
        - --tls-key=/etc/tls/private/tls.key
        - --cookie-secret=^{{randAlphaNum 15}}
        - --scope=user:full
        - --upstream=https://localhost:3000
        - --upstream-ca={{ .Values.volumeMounts.kuiCertsMountPath }}/ca.crt
        image: openshift/oauth-proxy:latest
        imagePullPolicy: IfNotPresent
        securityContext:
          capabilities:
            drop:
              - all
          runAsUser: 3000
        ports:
        - containerPort: {{.Values.OpenshiftSettings.oauth.proxyPort }} 
          name: public
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: "{{ .Values.volumeMounts.kuiCertsMountPath }}" 
          name: "{{ .Values.volumeMounts.kuiCertsName }}"
        - mountPath: /etc/tls/private
          name: oauth-proxy-tls
        {{- if .Values.OpenshiftSettings.oauth.mountServiceAccount }}
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
          name: oauth-service-account
        {{- end }}

      {{- end}}
      - name: {{ .Values.proxy.name }}
        image: "{{ .Values.proxy.image.repository }}/{{ .Values.proxy.image.name }}:{{ .Values.proxy.image.tag }}{{ .Values.imageTagPostfix }}"
        imagePullPolicy: {{ .Values.proxy.image.pullPolicy }}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          runAsUser: 0
        livenessProbe:
          httpGet:
            path: "/status/livenessProbe"
            port: 3000
            scheme: HTTPS
        readinessProbe:
          httpGet:
            path: "/status/readinessProbe"
            port: 3000
            scheme: HTTPS
        env:
        - name: USE_CLOUDPAK_SETTINGS
          value: {{- if .Values.useOpenshiftSettings}} "false" {{- else}} "true" {{- end}}
        {{- if .Values.useOpenshiftSettings }}
        - name: TOKEN_FROM_COOKIE
          value: {{- if .Values.OpenshiftSettings.oauth.tokenFromCookie }} "true" {{- else }} "false" {{- end}}
        - name: ACCESS_TOKEN_KEY
          value: {{ .Values.OpenshiftSettings.oauth.tokenKey }}
        {{- end}}
        - name: ICP_EXTERNAL_URL
          value: "https://{{ .Values.proxy.clusterIP }}:{{ .Values.proxy.clusterPort }}"
        - name: KUI_INGRESS_PATH
          value: "{{ .Values.proxy.ingressPath }}"
        volumeMounts:
        - name: "{{ .Values.volumeMounts.kuiCertsName }}"
          mountPath: "{{ .Values.volumeMounts.kuiCertsMountPath }}"
        {{- if and .Values.useOpenshiftSettings (and (not .Values.OpenshiftSettings.oauth.useProxy) .Values.OpenshiftSettings.oauth.mountServiceAccount) }}
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
          name: oauth-service-account
        {{- end }}
        resources:
{{ toYaml .Values.proxy.resources | indent 10 }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 6 }}
    {{- end }}
      volumes:
      - name: "{{ .Values.volumes.kuiCertsName }}"
        secret:
          secretName: "{{ .Values.volumes.kuiCertsSecretName }}"
      {{- if and .Values.useOpenshiftSettings .Values.OpenshiftSettings.oauth.mountServiceAccount }}
      - name: oauth-service-account
        secret:
          secretName: {{ .Values.OpenshiftSettings.oauth.serviceAccountSecret }}
      {{- end}}
      {{- if and .Values.useOpenshiftSettings .Values.OpenshiftSettings.oauth.useProxy }}
      - name: oauth-proxy-tls
        secret:
          secretName: {{ .Values.OpenshiftSettings.oauth.proxyTlsSecretName }}
      {{- end}}
      